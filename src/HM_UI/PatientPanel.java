/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package HM_UI;

import HM_Model.Doctor;
import HM_Model.DoctorDirectory;
import HM_Model.Encounter;
import HM_Model.EncounterDetails;
import HM_Model.Patient;
import HM_Model.PatientHistory;
import HM_Model.VitalSigns;
import HM_Model.VitalSignsDirectory;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.lang.String;

/**
 *
 * @author adity
 */
public class PatientPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientPanel
     */
    DoctorDirectory doctorDirectory;
    PatientHistory patientHistory;
    Patient p;
    EncounterDetails encounterDetails;
    VitalSignsDirectory vitalSignsDirectory;
    
    public PatientPanel(DoctorDirectory doctorDirectory, PatientHistory patientHistory, Patient p, EncounterDetails encounterDetails, VitalSignsDirectory vitalSignsDirectory) {
        initComponents();
        this.doctorDirectory=doctorDirectory;
        this.p=p;
        this.encounterDetails=encounterDetails;
        this.vitalSignsDirectory=vitalSignsDirectory;
        
        lblHeading1.setText("Welcome "+p.getName());
        populateDocTable();
        
        btnViewPatient.setVisible(false);
        btnUpdatePDetails.setVisible(false);
        txtPName.setVisible(false);
        txtPAge.setVisible(false);
        txtPEmail.setVisible(false);
        txtPPhone.setVisible(false);
        txtPHeight.setVisible(false);
        txtPWeight.setVisible(false);
        lblPName.setVisible(false);
        lblPAge.setVisible(false);
        lblPEmail.setVisible(false);
        lblPPhone.setVisible(false);
        lblHeight.setVisible(false);
        lblWeight.setVisible(false);
        
        populatePatientTable(p);
        populateEncounter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientView = new javax.swing.JTable();
        btnViewAll = new javax.swing.JButton();
        lblHeading2 = new javax.swing.JLabel();
        lblHeading3 = new javax.swing.JLabel();
        lblPulse = new javax.swing.JLabel();
        txtPulse = new javax.swing.JTextField();
        lblBP = new javax.swing.JLabel();
        txtBP = new javax.swing.JTextField();
        lblSugar = new javax.swing.JLabel();
        txtSugar = new javax.swing.JTextField();
        lblHeading4 = new javax.swing.JLabel();
        lblPName = new javax.swing.JLabel();
        lblPAge = new javax.swing.JLabel();
        lblPEmail = new javax.swing.JLabel();
        lblPPhone = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        txtPName = new javax.swing.JTextField();
        txtPAge = new javax.swing.JTextField();
        txtPEmail = new javax.swing.JTextField();
        txtPPhone = new javax.swing.JTextField();
        txtPHeight = new javax.swing.JTextField();
        txtPWeight = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDoctorView = new javax.swing.JTable();
        btnViewPatient = new javax.swing.JButton();
        btnUpdatePDetails = new javax.swing.JButton();
        lblEncounter = new javax.swing.JLabel();
        lblSelectDate = new javax.swing.JLabel();
        btnBookSlot = new javax.swing.JButton();
        calenderSlot = new com.toedter.calendar.JDateChooser();
        cbPEncounter = new javax.swing.JComboBox<>();
        lblSelectEncounter = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaPatientProblem = new javax.swing.JTextArea();
        jScrollPanel3 = new javax.swing.JScrollPane();
        txtAreaDoctorSolution = new javax.swing.JTextArea();
        lblPatientProblem = new javax.swing.JLabel();
        lblDoctorSolution = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1410, 1130));
        setLayout(null);

        lblHeading1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblHeading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading1.setText("Welcome to the Patient View");
        add(lblHeading1);
        lblHeading1.setBounds(162, 36, 862, 49);
        add(txtSearch);
        txtSearch.setBounds(150, 150, 218, 22);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch);
        btnSearch.setBounds(60, 150, 72, 23);

        tblPatientView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Email ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPatientView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientViewMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPatientView);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 900, 649, 62);

        btnViewAll.setText("View All");
        btnViewAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAllActionPerformed(evt);
            }
        });
        add(btnViewAll);
        btnViewAll.setBounds(580, 150, 72, 23);

        lblHeading2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblHeading2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading2.setText("Your Doctors");
        add(lblHeading2);
        lblHeading2.setBounds(499, 103, 139, 29);

        lblHeading3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblHeading3.setText("Your Vital Signs");
        add(lblHeading3);
        lblHeading3.setBounds(381, 482, 170, 29);

        lblPulse.setText("Pulse :");
        add(lblPulse);
        lblPulse.setBounds(210, 571, 34, 16);
        add(txtPulse);
        txtPulse.setBounds(261, 580, 110, 30);

        lblBP.setText("BP :");
        add(lblBP);
        lblBP.setBounds(224, 630, 20, 16);
        add(txtBP);
        txtBP.setBounds(261, 627, 110, 30);

        lblSugar.setText("Sugar Levels :");
        add(lblSugar);
        lblSugar.setBounds(172, 670, 71, 16);
        add(txtSugar);
        txtSugar.setBounds(260, 670, 110, 30);

        lblHeading4.setBackground(new java.awt.Color(255, 255, 255));
        lblHeading4.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblHeading4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading4.setText("Your Details");
        add(lblHeading4);
        lblHeading4.setBounds(-180, 830, 953, 29);

        lblPName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPName.setText("Patient Name");
        add(lblPName);
        lblPName.setBounds(750, 890, 140, 25);

        lblPAge.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPAge.setText("Age");
        add(lblPAge);
        lblPAge.setBounds(1100, 930, 40, 25);

        lblPEmail.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblPEmail.setText("Email");
        add(lblPEmail);
        lblPEmail.setBounds(800, 940, 70, 21);

        lblPPhone.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPPhone.setText("Phone");
        add(lblPPhone);
        lblPPhone.setBounds(1090, 970, 60, 25);

        lblHeight.setBackground(new java.awt.Color(0, 255, 204));
        lblHeight.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblHeight.setText("Height");
        add(lblHeight);
        lblHeight.setBounds(800, 980, 60, 20);

        lblWeight.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWeight.setText("Weight");
        add(lblWeight);
        lblWeight.setBounds(1090, 890, 70, 25);
        add(txtPName);
        txtPName.setBounds(880, 890, 166, 30);
        add(txtPAge);
        txtPAge.setBounds(1170, 930, 64, 30);
        add(txtPEmail);
        txtPEmail.setBounds(880, 930, 166, 30);
        add(txtPPhone);
        txtPPhone.setBounds(1170, 970, 140, 30);

        txtPHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPHeightActionPerformed(evt);
            }
        });
        add(txtPHeight);
        txtPHeight.setBounds(880, 970, 73, 30);
        add(txtPWeight);
        txtPWeight.setBounds(1170, 890, 64, 30);

        tblDoctorView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Speciality", "Hospital Name", "Hospital Location"
            }
        ));
        jScrollPane3.setViewportView(tblDoctorView);

        add(jScrollPane3);
        jScrollPane3.setBounds(40, 190, 710, 241);

        btnViewPatient.setText("View Details");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });
        add(btnViewPatient);
        btnViewPatient.setBounds(402, 941, 93, 23);

        btnUpdatePDetails.setText("Update Details");
        btnUpdatePDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePDetailsActionPerformed(evt);
            }
        });
        add(btnUpdatePDetails);
        btnUpdatePDetails.setBounds(990, 1070, 130, 23);

        lblEncounter.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblEncounter.setText("Book Encounter");
        add(lblEncounter);
        lblEncounter.setBounds(980, 150, 167, 29);

        lblSelectDate.setText("Select Date :");
        add(lblSelectDate);
        lblSelectDate.setBounds(910, 250, 70, 16);

        btnBookSlot.setText("Book Slot");
        btnBookSlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookSlotActionPerformed(evt);
            }
        });
        add(btnBookSlot);
        btnBookSlot.setBounds(960, 420, 110, 23);
        add(calenderSlot);
        calenderSlot.setBounds(990, 240, 151, 22);

        cbPEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPEncounterActionPerformed(evt);
            }
        });
        add(cbPEncounter);
        cbPEncounter.setBounds(283, 540, 90, 22);

        lblSelectEncounter.setText("Select Encounter :");
        add(lblSelectEncounter);
        lblSelectEncounter.setBounds(172, 543, 94, 16);

        txtAreaPatientProblem.setColumns(20);
        txtAreaPatientProblem.setRows(5);
        jScrollPane2.setViewportView(txtAreaPatientProblem);

        add(jScrollPane2);
        jScrollPane2.setBounds(990, 290, 234, 86);

        txtAreaDoctorSolution.setColumns(20);
        txtAreaDoctorSolution.setRows(5);
        jScrollPanel3.setViewportView(txtAreaDoctorSolution);

        add(jScrollPanel3);
        jScrollPanel3.setBounds(572, 555, 234, 86);

        lblPatientProblem.setText("Brief your Problem :");
        add(lblPatientProblem);
        lblPatientProblem.setBounds(870, 330, 105, 16);

        lblDoctorSolution.setText("Doctor's Solution :");
        add(lblDoctorSolution);
        lblDoctorSolution.setBounds(421, 594, 110, 16);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\adity\\Downloads\\patient-room-front-view_960x530_1410x1130.jpg")); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, -80, 1520, 1290);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String search=txtSearch.getText();
        var result = doctorDirectory.doctorSearch(search);
        populateDocSearch(result);
        txtSearch.setText("");
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnViewAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAllActionPerformed
        // TODO add your handling code here:
        populateDocTable();
        txtSearch.setText("");
    }//GEN-LAST:event_btnViewAllActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here:
      /*  int selectedRowIndex = tblPatientView.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please Select the Patient to View their Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
        Patient selectedpatient=(Patient) model.getValueAt(selectedRowIndex, 0);
        
        btnUpdatePDetails.setVisible(true);
        txtPName.setVisible(true);
        txtPAge.setVisible(true);
        txtPEmail.setVisible(true);
        txtPPhone.setVisible(true);
        txtPHeight.setVisible(true);
        txtPWeight.setVisible(true);
        lblPName.setVisible(true);
        lblPAge.setVisible(true);
        lblPEmail.setVisible(true);
        lblPPhone.setVisible(true);
        lblHeight.setVisible(true);
        lblWeight.setVisible(true);
        
        txtPName.setText(selectedpatient.getName());
        txtPAge.setText(String.valueOf(selectedpatient.getpAge()));
        txtPEmail.setText(selectedpatient.getEmail());
        txtPPhone.setText(String.valueOf(selectedpatient.getPhone()));
        txtPHeight.setText(String.valueOf(selectedpatient.getHeight()));
        txtPWeight.setText(String.valueOf(selectedpatient.getWeight()));
        */

    }//GEN-LAST:event_btnViewPatientActionPerformed

    
    
    String pName;
    int pAge;
    String pEmail;
    long pPhone;
    double pHeight;
    double pWeight;
    
    private boolean checkfield(){
    ArrayList msg=null;
    msg= new ArrayList();
    
     if(txtPName.getText().isBlank()|| !(txtPName.getText().matches("^[a-zA-Z ]*$")))
        {msg.add("Please enter the name without digits or special characters but do not leave it blank");}
     if(txtPEmail.getText().isBlank()||!(txtPEmail.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$")))
        msg.add(("Please enter the correct email (xxx@xx.com)"));
     if(!(String.valueOf(txtPPhone.getText()).matches("^[0-9]{10}$")))
       {msg.add("Please enter the 10 digit mobile number");}
     if(Integer.parseInt(txtPAge.getText())<1 || Integer.parseInt(txtPAge.getText())>=100)
        {msg.add("Please enter the correct age between 1 and 100");}
     if(Double.parseDouble(txtPHeight.getText())<30.48|| Double.parseDouble(txtPHeight.getText())>300)
        {msg.add("Please Enter your appropriate height");}
     if(Double.parseDouble(txtPWeight.getText())<4.4 ||Double.parseDouble(txtPWeight.getText()) >500)
         msg.add("Please Enter your Correct weight");
     
      if(!(msg.isEmpty()))
        {JOptionPane.showMessageDialog(this, msg.toArray());
        msg.clear();
        return false;}
        else 
        return true;
    }
     
    
    
    
    private void btnUpdatePDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientView.getSelectedRow();
         if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please Select the Patient to Update their Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
        Patient selectedpatient=(Patient) model.getValueAt(selectedRowIndex, 0);
        try{
        if(checkfield()){    
        selectedpatient.setName(txtPName.getText());
        selectedpatient.setEmail(txtPEmail.getText());
        selectedpatient.setpAge(Integer.parseInt(txtPAge.getText()));
        selectedpatient.setPhone(Long.parseLong(txtPPhone.getText()));
        selectedpatient.setHeight(Double.parseDouble(txtPHeight.getText()));
        selectedpatient.setWeight(Double.parseDouble(txtPWeight.getText()));
        
        JOptionPane.showMessageDialog(this, "Your Details Have Been Updated..!!");
        populatePatientTable(p);
        
        txtPName.setText("");
        txtPAge.setText("");
        txtPEmail.setText("");
        txtPPhone.setText("");
        txtPHeight.setText("");
        txtPWeight.setText("");
        
        btnUpdatePDetails.setVisible(false);
        txtPName.setVisible(false);
        txtPAge.setVisible(false);
        txtPEmail.setVisible(false);
        txtPPhone.setVisible(false);
        txtPHeight.setVisible(false);
        txtPWeight.setVisible(false);
        lblPName.setVisible(false);
        lblPAge.setVisible(false);
        lblPEmail.setVisible(false);
        lblPPhone.setVisible(false);
        lblHeight.setVisible(false);
        lblWeight.setVisible(false);
        
        }
        }
        catch(Exception e){JOptionPane.showMessageDialog(this, "Please update with correct values..!!");}

      
        
    }//GEN-LAST:event_btnUpdatePDetailsActionPerformed

    private void btnBookSlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookSlotActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctorView.getSelectedRow();
         if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please Select your Doctor");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctorView.getModel();
        Doctor selectedDoctor=(Doctor) model.getValueAt(selectedRowIndex, 0);
        
        SimpleDateFormat df= new SimpleDateFormat("MM-dd-yyyy") {};
        
        if(calenderSlot.getDate()== null || txtAreaPatientProblem.getText()==null){JOptionPane.showMessageDialog(this, "Please Select an Appointment or Summarize your Problem");}
        else{
        String date = df.format(calenderSlot.getDate().getTime());
        Encounter e= encounterDetails.addEncounter();
        e.setD(selectedDoctor);
        e.setP(p);
        e.setEncDate(date);
        e.setPatientProblem(txtAreaPatientProblem.getText());
        
        JOptionPane.showMessageDialog(this, "Slot Scheduled");
        //System.out.println(date);
        }
    }//GEN-LAST:event_btnBookSlotActionPerformed

    private void cbPEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPEncounterActionPerformed
        // TODO add your handling code here:
        VitalSigns vs = getVitalSigns(p, String.valueOf(cbPEncounter.getSelectedItem()));
        txtPulse.setText("");
        txtBP.setText("");
        txtSugar.setText("");
        txtAreaDoctorSolution.setText("");
        txtAreaPatientProblem.setText("");
        
        txtPulse.setText(vs.getPulse()+"");
        txtBP.setText(vs.getBp());
        txtSugar.setText(vs.getSugar()+"");
        txtAreaPatientProblem.setText(vs.getPatientProblem());
        txtAreaDoctorSolution.setText(vs.getDoctorSolution());
        
        
        
    }//GEN-LAST:event_cbPEncounterActionPerformed

    private void txtPHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPHeightActionPerformed

    private void tblPatientViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientViewMouseClicked
        // TODO add your handling code here:
       int selectedRowIndex = tblPatientView.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please Select the Patient to View their Details");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientView.getModel();
        Patient selectedpatient=(Patient) model.getValueAt(selectedRowIndex, 0);
        
        btnUpdatePDetails.setVisible(true);
        txtPName.setVisible(true);
        txtPAge.setVisible(true);
        txtPEmail.setVisible(true);
        txtPPhone.setVisible(true);
        txtPHeight.setVisible(true);
        txtPWeight.setVisible(true);
        lblPName.setVisible(true);
        lblPAge.setVisible(true);
        lblPEmail.setVisible(true);
        lblPPhone.setVisible(true);
        lblHeight.setVisible(true);
        lblWeight.setVisible(true);
        
        txtPName.setText(selectedpatient.getName());
        txtPAge.setText(String.valueOf(selectedpatient.getpAge()));
        txtPEmail.setText(selectedpatient.getEmail());
        txtPPhone.setText(String.valueOf(selectedpatient.getPhone()));
        txtPHeight.setText(String.valueOf(selectedpatient.getHeight()));
        txtPWeight.setText(String.valueOf(selectedpatient.getWeight()));   
    }//GEN-LAST:event_tblPatientViewMouseClicked
        
    private VitalSigns getVitalSigns(Patient p, String date){
        ArrayList<VitalSigns> list = vitalSignsDirectory.getVitalSignsDirectory();
        for(VitalSigns vs:list){
            if(vs.getP()==p && vs.getEncDate().equals(date))
                return vs;
        }
        return null;
    }
    
    private void populateEncounter(){
        for(Encounter e: encounterDetails.getEncounterDetails()){
            if(e.getP()==p)
                cbPEncounter.addItem(e.getEncDate());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookSlot;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdatePDetails;
    private javax.swing.JButton btnViewAll;
    private javax.swing.JButton btnViewPatient;
    private com.toedter.calendar.JDateChooser calenderSlot;
    private javax.swing.JComboBox<String> cbPEncounter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPanel3;
    private javax.swing.JLabel lblBP;
    private javax.swing.JLabel lblDoctorSolution;
    private javax.swing.JLabel lblEncounter;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JLabel lblHeading2;
    private javax.swing.JLabel lblHeading3;
    private javax.swing.JLabel lblHeading4;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblPAge;
    private javax.swing.JLabel lblPEmail;
    private javax.swing.JLabel lblPName;
    private javax.swing.JLabel lblPPhone;
    private javax.swing.JLabel lblPatientProblem;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblSelectDate;
    private javax.swing.JLabel lblSelectEncounter;
    private javax.swing.JLabel lblSugar;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JTable tblDoctorView;
    private javax.swing.JTable tblPatientView;
    private javax.swing.JTextArea txtAreaDoctorSolution;
    private javax.swing.JTextArea txtAreaPatientProblem;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtPAge;
    private javax.swing.JTextField txtPEmail;
    private javax.swing.JTextField txtPHeight;
    private javax.swing.JTextField txtPName;
    private javax.swing.JTextField txtPPhone;
    private javax.swing.JTextField txtPWeight;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSugar;
    // End of variables declaration//GEN-END:variables

    private void populateDocTable() {
        DefaultTableModel model = (DefaultTableModel) tblDoctorView.getModel();
        model.setRowCount(0);
        for(Doctor d:doctorDirectory.getDoctorDirectory()){
            Object[] rows = new Object[4];
            rows[0]= d;
            rows[1]=d.getSpeciality();
            rows[2]=d.getHospitalName();
            rows[3]=d.getHospitalLocation();
            
            model.addRow(rows);
    }
    }
    
    private void populateDocSearch(ArrayList<Doctor> result) {
        DefaultTableModel model = (DefaultTableModel) tblDoctorView.getModel();
        model.setRowCount(0);
        for(Doctor d:result){
            Object[] rows = new Object[4];
            rows[0]= d;
            rows[1]=d.getSpeciality();
            rows[2]=d.getHospitalName();
            rows[3]=d.getHospitalLocation();
            
            model.addRow(rows);
        }
    }
    
   private void populatePatientTable(Patient p){
        DefaultTableModel model =(DefaultTableModel) tblPatientView.getModel();
        model.setRowCount(0);
        
            Object[] rows = new Object[2];
            rows[0]=p;
            rows[1]=p.getEmail();
            
            model.addRow(rows);
        
    }
}
